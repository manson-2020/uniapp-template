view,
picker,
button,
label,
swiper-item,
scroll-view,
cover-view,
navigator,
radio-group,
checkbox-group {
    display: flex;
    flex-direction: column;
    box-sizing: border-box;
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
}

label {
    flex-direction: row;
    align-items: center;
}

scroll-view {
    width: auto;
}

picker[disabled],
button[disabled] {
    opacity: 0.5;
}

// restore
@each $tag
    in (
        view,
        picker,
        button,
        label,
        swiper,
        scroll-view,
        cover-view,
        navigator,
        swiper,
        swiper-item,
        radio,
        radio-group,
        checkbox-group,
        checkbox
    )
{
    #{$tag}.block {
        display: block;
    }
    #{$tag}.content-box {
        box-sizing: content-box;
    }
}

@each $color in (#f33, #808080, #ccc, #ddd, #fff, #333, #222, #666, #aaa, #eee, #888, #999) {
    .color-#{str-slice("#{$color}", 2)} {
        color: $color;
    }
}

@each $bgc
    in (#f9f9f9, #dfdfdf, #f5f5f5, #1b1b1b, #eee, #fff, #ccc, transparent)
{
    .bgc-#{str-slice("#{$bgc}", 2)} {
        background-color: $bgc;
    }
}

.border-none {
    border: none;
}

.tap-hover {
    opacity: 0.6;
}

.input {
    border: none;
    outline: none;
    background-color: transparent;
}

.safe-area-inset-bottom {
    padding-bottom: constant(safe-area-inset-bottom);
    padding-bottom: env(safe-area-inset-bottom);
}

.shelter {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: rgba(51, 51, 51, 0.3);
}

.oh {
    overflow: hidden;
}

.word-break-all {
    word-break: break-all;
}

.ellipsis {
    display: inline-block;
    overflow: hidden;
    min-width: 0;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.multi-ellipsis {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
}

.flex-wrap {
    flex-wrap: wrap;
}
